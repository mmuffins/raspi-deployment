---
- import_tasks: facts.yml

- ansible.posix.sysctl:
    state: present
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    reload: true
  loop:
    - { name: "net.ipv4.tcp_max_syn_backlog", value: 4096 }
    - { name: "net.core.somaxconn", value: 4096 }

- name: Create docker folder
  ansible.builtin.file:
    state: directory
    path: "/home/{{ docker_user_name }}/docker/rutorrent"
    owner: "{{ docker_user_id }}"
    group: "{{ docker_group_id }}"
    mode: 0770

- name: Create docker-compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "/home/{{ docker_user_name }}/docker/rutorrent/docker-compose.yml"
    mode: 0644
    owner: "{{ docker_user_id }}"
    group: "{{ docker_group_id }}"

- name: Create env file
  ansible.builtin.template:
    src: .env.j2
    dest: "/home/{{ docker_user_name }}/docker/rutorrent/.env"
    mode: 0644
    owner: "{{ docker_user_id }}"
    group: "{{ docker_group_id }}"

- name: Create rtorrent-rutorrent.env file
  ansible.builtin.template:
    src: rtorrent-rutorrent.env.j2
    dest: "/home/{{ docker_user_name }}/docker/rutorrent/rtorrent-rutorrent.env"
    mode: 0644
    owner: "{{ docker_user_id }}"
    group: "{{ docker_group_id }}"

- name: Create app file structure
  ansible.builtin.file:
    state: directory
    owner: "{{ docker_user_name }}"
    group: "{{ docker_group_name }}"
    mode: 0774
    path: "{{ item.path }}"
  loop:
    - { path: "/home/{{ docker_user_name }}/data" }
    - { path: "/home/{{ docker_user_name }}/torrents" }
    - { path: "/home/{{ docker_user_name }}/passwd" }

- import_tasks: backup.yml
  when: backup_list is defined
  tags:
    - backup

- import_tasks: smb.yml
  when: smb_user_name is defined
  tags:
    - smb

- name: Create cleanup cron job
  ansible.builtin.cron:
    user: "{{ docker_user_name }}"
    name: "Cleanup old torrents"
    minute: 0
    hour: 3
    job: "bash find /home/{{ docker_user_name }}/config/{{ docker_user_name }}/profiles/torrents/ -type f -mtime +60 -name '*).torrent' -execdir rm -- '{}' \\;"

- name: Start container
  community.docker.docker_compose:
    state: present
    pull: true
    project_src: "/home/{{ docker_user_name }}/docker/rutorrent"
  become: yes
  become_user: "{{ docker_user_name }}"
  register: rutorrent_docker_output