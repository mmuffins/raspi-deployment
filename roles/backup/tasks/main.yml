---
- name: Create backup group
  ansible.builtin.group:
    name:  "{{ backup_user_name }}"
    state: present

- name: Create backup user
  ansible.builtin.user: 
    name: "{{ backup_user_name }}"
    comment: Backup user
    group: "{{ backup_user_name }}"
    state: present
    shell: /bin/bash
    generate_ssh_key: true
    ssh_key_type: ed25519
    createhome: true

- name: Assign sudo permission to backup user
  ansible.builtin.user:
    name: "{{ backup_user_name }}"
    groups: usersudo
    append: yes
    state: present

- name: Add backup user to docker group
  ansible.builtin.user:
    name: "{{ backup_user_name }}"
    groups: docker
    append: yes
    state: present

# - name: Ensure restic repo key file exists
#   ansible.builtin.lineinfile:
#     path: "{{ backup_dir }}/key"
#     regexp: '.*'
#     line: "{{ backup_restic_repository_key }}"
#     create: yes
#     mode: 0600

# - name: Ensure restic config exists
#   ansible.builtin.template:
#     src: "templates/profiles.toml.j2"
#     dest: "{{ backup_dir }}/profiles.toml"
#     mode: 0666
#     owner: "{{ backup_user_name }}"
#     group: "{{ backup_user_name }}"

- name: Ensure backrest base directory exists
  ansible.builtin.file:
    path: "/home/{{ backup_user_name }}/backrest"
    state: directory
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"
    mode: '0770'

- name: Create backrest sub-directories
  ansible.builtin.file:
    path: "/home/{{ backup_user_name }}/backrest/{{ item }}"
    state: directory
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"
    mode: '0770'
  loop:
    - data
    - cache
    - config

# - name: Ensure linux file endings in backup script
#   ansible.builtin.replace:
#     path: "{{ backup_script_dir }}/raspi-backup-syncfiles.sh"
#     regexp: "\r"
#   changed_when: false
#   check_mode: false
    

# - name: Create cron job
#   ansible.builtin.cron:
#     user: "{{ backup_user_name }}"
#     name: "Run backup"
#     minute: 0
#     hour: 4
#     job: "bash {{ backup_script_dir }}/raspi-backup-syncfiles.sh >/dev/null 2>&1"


- name: Create docker folder
  ansible.builtin.file:
    state: directory
    path: "/home/{{ backup_user_name }}/docker/backrest"
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"
    mode: 0770

- name: Create docker-compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "/home/{{ backup_user_name }}/docker/backrest/docker-compose.yml"
    mode: 0644
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"

- name: Start container
  community.docker.docker_compose:
    state: present
    pull: true
    project_src: "/home/{{ backup_user_name }}/docker/backrest"
  become: yes
  become_user: "{{ backup_user_name }}"
  register: backrest_docker_output

- name: Prune docker images
  community.docker.docker_prune:
    containers: yes
    networks: yes
    volumes: yes
    images: yes
    images_filters:
      dangling: false