---
- name: Install dependencies
  ansible.builtin.apt:
    state: present
    name: 
      - acl
      - cifs-utils

- name: Create backup group
  ansible.builtin.group:
    name:  "{{ backup_user_name }}"
    state: present

- name: Create backup user
  ansible.builtin.user: 
    name: "{{ backup_user_name }}"
    comment: Backup user
    group: "{{ backup_user_name }}"
    state: present
    shell: /bin/bash
    generate_ssh_key: true
    ssh_key_type: ed25519
    createhome: true

- name: Assign sudo permission to backup user
  ansible.builtin.user:
    name: "{{ backup_user_name }}"
    groups: usersudo
    append: yes
    state: present

- name: Ensure backup directories exists
  ansible.builtin.file:
    state: directory
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"
    mode: 0774
    path: "{{ item.path }}"
  loop:
    - { path: "{{ backup_dir }}" }
    - { path: "{{ backup_script_dir }}" }
    - { path: "{{ backup_log_directory }}" }
    - { path: "{{ backup_script_dir }}/mnt" }

- name: Ensure backup script exists
  ansible.builtin.copy:
    src: files/raspi-backup-syncfiles.sh
    dest: "{{ backup_script_dir }}/raspi-backup-syncfiles.sh"
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"
    mode: 0777

- name: Ensure linux file endings in backup script
  ansible.builtin.replace:
    path: "{{ backup_script_dir }}/raspi-backup-syncfiles.sh"
    regexp: "\r"

- name: Ensure backup credential file exists
  ansible.builtin.template:
    src: "templates/backupCredFile.j2"
    dest: "{{ backup_script_dir }}/.backupcreds"
    mode: 0600
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"

- name: Update backup configs
  ansible.builtin.template:
    src: "templates/backupconf.j2"
    dest: "{{ backup_script_dir }}/backup-config"
    mode: 0666
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"

- name: Create backup list
  ansible.builtin.file:
    path: "{{ backup_list }}"
    state: touch
    mode: 0666
    owner: "{{ backup_user_name }}"
    group: "{{ backup_user_name }}"
    modification_time: preserve
    access_time: preserve

- name: Setup fstab
  ansible.builtin.lineinfile:
    dest: /etc/fstab
    state: present
    regexp: '^{{ backup_remote_share }}/{{ inventory_hostname }}\s+{{ backup_script_dir }}/mnt.*credentials={{ backup_script_dir }}/.backupcreds'
    line: "{{ backup_remote_share }}/{{ inventory_hostname }}  {{ backup_script_dir }}/mnt cifs  noauto,users,credentials={{ backup_script_dir }}/.backupcreds,vers=1.0  0  0"
  notify: reboot

- name: Create cron job
  ansible.builtin.cron:
    user: "{{ backup_user_name }}"
    name: "Run backup"
    minute: 0
    hour: 4
    job: "bash {{ backup_script_dir }}/raspi-backup-syncfiles.sh >/dev/null 2>&1"
